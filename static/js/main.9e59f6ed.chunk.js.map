{"version":3,"sources":["components/Nav/images/space-invaders-svgrepo-com.svg","components/ImageCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Nav/index.js","components/CardWrapper/index.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","ImageCard","props","react_default","a","createElement","onClick","clickImage","id","clicked","className","data-id","src","image","Wrapper","children","Title","Nav","logo","alt","score","highscore","CardWrapper","App","state","characters","componentDidMount","_this","setState","shuffleCharacters","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","newArr","forEach","character","push","console","log","newArr2","_this2","this","components_Wrapper","components_Nav","components_Title","components_CardWrapper","map","components_ImageCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9e59f6ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/space-invaders-svgrepo-com.2f78c2d7.svg\";","import React from \"react\";\nimport \"./style.css\";\n\nfunction ImageCard(props) {\n  return (\n    <div onClick={() => props.clickImage(props.id, props.clicked)} className=\"card\" data-id={props.clicked} id=\"card\">\n      <img  src={props.image} />\n    </div>\n  );\n}\n\nexport default ImageCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Title = () => \n<div className=\"jumbotron jumbotron-fluid\">\n  <div className=\"container\" id = \"heroSect\">\n    <h1 >Click on an image to earn points, but don't click on any more than once.</h1>\n    <h1>Click an image below to begin.</h1>\n  </div>\n</div>\n\nexport default Title;\n","import React from \"react\";\r\nimport logo from \"./images/space-invaders-svgrepo-com.svg\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst Nav = (props) => \r\n    <nav className=\"nav nav-justified navbar fixed-top navbar-expand-lg navbar-dark bg-dark bg-primary\">\r\n        <span className=\"nav-item\" id=\"title\"> RETRO-CLICK</span>\r\n        <img className=\"nav-item\" src={logo} id=\"logo\" alt=\"logo\" />\r\n        <div className=\"nav-item\" >Score: {props.score}| Top Score: {props.highscore}</div>\r\n    </nav>\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction CardWrapper(props) {\r\n  return <div className=\"container\" ><div className=\"cardWrapper\">{props.children}</div></div>;\r\n}\r\n\r\nexport default CardWrapper;","import React, { Component } from \"react\";\nimport ImageCard from \"./components/ImageCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport characters from \"./characters.json\";\nimport Nav from \"./components/Nav\";\nimport CardWrapper from \"./components/CardWrapper\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    characters,\n    score: 0,\n    highscore: 0\n  };\n\n  //react lifecycle function that runs ater a component is mounted\n  componentDidMount = () => {\n    //sets the state to the new array that has a random order\n    this.setState({characters: this.shuffleCharacters(this.state.characters)});\n  }\n\n  //function to shuffle the characters array\n  shuffleCharacters = array => {\n    let currentIndex = array.length, temporaryValue, randomIndex;\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    //returns the shuffled array, What gets assigned to state\n    return array;\n  }\n\n  clickImage = (id, clicked) => {\n    //if the character has yet to be clicked change the clicked status of that character to true\n    if(clicked === false){\n      //empty array that will reaplace state array with updated array\n      const newArr =[];\n      this.state.characters.forEach( (character) => {\n        //changes the clicked character's status to true\n        if(character.id === id){\n          character.clicked = true;\n          this.setState({score: this.state.score + 1});\n        }\n        newArr.push(character)\n      });\n      console.log(newArr);\n      //replace state character array with the updated one and shuffle it \n      this.setState({characters: this.shuffleCharacters(newArr)}); \n    }\n    //if the character has already been clicked then do this\n    else if(clicked === true){\n      const newArr2 =[];\n      this.state.characters.forEach( (character) => {\n        //changes all the clicked statuses back to false\n        character.clicked = false;\n        newArr2.push(character)\n      });\n      this.setState({characters: newArr2});\n      //sets the new highscore if there is one\n      if(this.state.score > this.state.highscore){\n        this.setState({highscore: this.state.score});\n      }\n      //resets score\n      this.setState({score: 0});\n\n    }\n    \n  }\n\n\n  // removeFriend = id => {\n  //   // Filter this.state.friends for friends with an id not equal to the id being removed\n  //   const friends = this.state.friends.filter(friend => friend.id !== id);\n  //   // Set this.state.friends equal to the new friends array\n  //   this.setState({ friends });\n  // };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Nav \n          score={this.state.score}\n          highscore={this.state.highscore}\n        />\n        <Title />\n        <CardWrapper>\n          {this.state.characters.map(character => (\n            <ImageCard\n              // removeFriend={this.removeFriend}\n              id={character.id}\n              key={character.id}\n              clicked={character.clicked}\n              clickImage={this.clickImage}\n              // name={character.name}\n              image={character.image}\n              // occupation={character.occupation}\n              // location={character.location}\n            />\n          ))}\n        </CardWrapper>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}